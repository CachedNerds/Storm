version: 2
jobs:
  get_project:
    working_directory: ~/project
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - persist_to_workspace:
          root: "~/project/"
          paths:
            - client
            - server
  build_client:
    working_directory: "~/project/client"
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - restore_cache:
          key: client-app-cache
      - run:
          name: Build Client
          command: cargo build
      - persist_to_workspace:
          root: "~/project/client/"
          paths:
            - target
            - save_cache:
                key: client-app-cache
                paths:
                - "~/.cargo"
                - "~/project/client/target"
  test_client:
    working_directory: "~/project/client"
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - restore_cache:
          key: client-app-cache
      - run:
          name: Test Client
          command: cargo test
  build_server:
    working_directory: ~/project/server
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - restore_cache:
          key: server-cache
      - run:
          name: Build Server
          command: cargo build
      - persist_to_workspace:
          root: "~/project/server/"
          paths:
            - target
            - save_cache:
                key: server-cache
                paths:
                - "~/.cargo"
                - "~/project/server/target"
  test_server:
    working_directory: ~/project/server
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - restore_cache:
          key: server-cache
      - run:
          name: Test Server
          command: cargo test
workflows:
  version: 2
  build:
    jobs:
      - get_project
      - build_client:
          requires:
            - get_project
      - build_server:
          requires:
            - get_project
#    - deploy:
#        requires:
#        - build
#        filters:
#          branches:
#only: master
